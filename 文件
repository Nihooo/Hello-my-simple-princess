#1.打开文件
f=open('~','r')——————————只读

f=open('~','w')——————————只写，但要先清空文件

f=open('~','x')——————————文件存在,报错;不存在,创建并写内容

f=open('~',''a)——————————追加

f=open('~',''r)——————————类型为字符串
data=f.read()
print(data)
f.close()

f=open('~','rb')——————————类型为字节
data=f.read()
print(data)
f.close()


f=open('~','a')
f.write("hello")
f.close()

f=open('~','ab')——————————写的时候要用字节,速度更快
f.write(bytes("hello",encoding='utf-8'))
f.close()


可读可写
r+（r+b(读写字节)） 
w+(w+b) ————————先清空,才能读写
x+(x+b) 
a+(a+b) ————————永远在最后添加


f=open('~','r+')
data=f.read(1)
print(f.tell())
f.seek(f.tell())
f.write("aaaaa")——————————从当前指针开始覆盖
f.close()


#2.操作文件
read()——————————无参数,读全部;有参数(有b,按字节;无b,按字符)

tell())—————————获取当前指针位置(字节)

seek(1))—————————指针跳转到指定位置(字节)

write()——————————写数据(有b,写字节;无b,写字符)

close()——————————关闭

flush()——————————强制刷新

readline()——————————仅读取一行

truncate()——————————截断,指针后的清空

for循环文件对象:
f=open('~')
for line in f:
  print(line)
  
  
#3.关闭文件
f.close()

with open('~') as f:
  ~
  ~      ————————————写内容，完成后自动关闭
  ~
  
同时打开两个文件
with open('~') as f1,open('~') as f2:
  ~
  ~
  

with open('~','r',encoding='utf-8') as f1,open('~','w',encoding='utf-8') as f2:
  times=0
  for line in f1:
      times+=1
      if times<10:
          f2.write(line)
      else:
          break


with open('~','r',encoding='utf-8') as f1,open('~','w',encoding='utf-8') as f2:
  for line in f1:
      new_str=line.replace('alex','lowato')
      f2.write(new_str)
